/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    ageGate: AgeGate;
    listeners: Listener;
    venues: Venue;
    categories: Category;
    articles: Article;
    events: Event;
    volunteerCalendar: VolunteerCalendar;
    weeklyCharts: WeeklyChart;
    pages: Page;
    podcasts: Podcast;
    announcements: Announcement;
    advertisements: Advertisement;
    shopItems: ShopItem;
    djs: Dj;
    media: Media;
    mobilePageContent: MobilePageContent;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    ageGate: AgeGateSelect<false> | AgeGateSelect<true>;
    listeners: ListenersSelect<false> | ListenersSelect<true>;
    venues: VenuesSelect<false> | VenuesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    volunteerCalendar: VolunteerCalendarSelect<false> | VolunteerCalendarSelect<true>;
    weeklyCharts: WeeklyChartsSelect<false> | WeeklyChartsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    podcasts: PodcastsSelect<false> | PodcastsSelect<true>;
    announcements: AnnouncementsSelect<false> | AnnouncementsSelect<true>;
    advertisements: AdvertisementsSelect<false> | AdvertisementsSelect<true>;
    shopItems: ShopItemsSelect<false> | ShopItemsSelect<true>;
    djs: DjsSelect<false> | DjsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    mobilePageContent: MobilePageContentSelect<false> | MobilePageContentSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    siteSettings: SiteSetting;
    mobileAppSettings: MobileAppSetting;
  };
  globalsSelect: {
    siteSettings: SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    mobileAppSettings: MobileAppSettingsSelect<false> | MobileAppSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ageGate".
 */
export interface AgeGate {
  id: number;
  age: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listeners".
 */
export interface Listener {
  id: number;
  name: string;
  email?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues".
 */
export interface Venue {
  id: number;
  name: string;
  address?: string | null;
  city?: string | null;
  state?: string | null;
  zip?: string | null;
  phone?: string | null;
  website?: string | null;
  mapUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number;
  category: number | Category;
  title: string;
  slug: string;
  author: string;
  featuredImage?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  featuredImageUrl?: string | null;
  /**
   * Brief summary (max 200 characters)
   */
  excerpt: string;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  videoTitle?: string | null;
  /**
   * YouTube video ID or full URL (e.g., rXeaPSu1JFY or https://www.youtube.com/watch?v=rXeaPSu1JFY)
   */
  youtubeVideoId?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  publishedDate: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  /**
   * Select a category for this event
   */
  category: number | Category;
  title: string;
  slug: string;
  /**
   * Brief summary (max 200 characters)
   */
  excerpt: string;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  featuredImage?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  featuredImageUrl?: string | null;
  /**
   * Display photo credit on the event page
   */
  showPhotoCredit?: boolean | null;
  /**
   * Name of the photographer
   */
  photographerName?: string | null;
  /**
   * Select a venue from the list
   */
  venue: number | Venue;
  date: string;
  endDate?: string | null;
  featured?: boolean | null;
  /**
   * Select age restriction if applicable
   */
  ageRestriction?: (number | null) | AgeGate;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volunteerCalendar".
 */
export interface VolunteerCalendar {
  id: number;
  name: string;
  startDate: string;
  /**
   * Optional - leave blank if same as start date
   */
  endDate?: string | null;
  /**
   * Human-readable date and time (e.g., "Wednesday, October 15, 2025 at 6:00 PM")
   */
  dateTime: string;
  /**
   * Brief description of the event
   */
  description: string;
  /**
   * Full address or virtual meeting info
   */
  location: string;
  /**
   * Bullet points with additional event details
   */
  eventDetails?:
    | {
        detail: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Optional link for more information
   */
  moreInfoUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "weeklyCharts".
 */
export interface WeeklyChart {
  id: number;
  /**
   * Eyebrow text shown above the chart title on the Listen page (e.g., "Week of October 19, 2025" or "Chicago Local Artists")
   */
  preheader?: string | null;
  /**
   * Chart title (e.g., "Top 50", "Most Added", "This Week's Adds")
   */
  title: string;
  /**
   * URL-friendly identifier (e.g., "top-50", "most-added"). Auto-generated from title if left blank.
   */
  slug?: string | null;
  /**
   * Legacy field - no longer used
   */
  listType?: string | null;
  /**
   * Upload a CSV file (format: Position,Artist,Track,Label). Click "Create New" to select and upload a file.
   */
  csvFile?: (number | null) | Media;
  /**
   * Paste CSV data here (format: Song,Artist,Label). Each line should be one item. This will populate the items below when you save.
   */
  csvImport?: string | null;
  /**
   * Items for this list. Format: Song Name – Artist Name (Record Company)
   */
  tracks: {
    /**
     * Song/track/album title
     */
    songName: string;
    /**
     * Artist name
     */
    artistName: string;
    /**
     * Record label/company (use "self-released" if independent)
     */
    recordCompany: string;
    id?: string | null;
  }[];
  /**
   * Mark this as the current week's chart to display on the Listen page
   */
  isCurrentWeek?: boolean | null;
  /**
   * Optional notes or highlights for this week
   */
  notes?: string | null;
  /**
   * Position of the featured/highlighted track (optional)
   */
  featuredTrack?: number | null;
  /**
   * Publish status
   */
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * The title displayed in browser tabs and search results (SEO)
   */
  title: string;
  slug: string;
  /**
   * Brief page summary used for SEO meta description and social media previews (recommended 150-160 characters)
   */
  excerpt?: string | null;
  layout?:
    | (
        | {
            /**
             * Small text above the title
             */
            preheader?: string | null;
            title: string;
            titleTag?: ('h1' | 'h2' | 'h3' | 'h4') | null;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            imagePosition?: ('none' | 'left' | 'right') | null;
            backgroundImage?: (number | null) | Media;
            /**
             * Or provide external URL
             */
            backgroundImageUrl?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contentCard';
          }
        | {
            images?:
              | {
                  image?: (number | null) | Media;
                  imageUrl?: string | null;
                  alt?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageRow';
          }
      )[]
    | null;
  /**
   * Optional announcement to display in sidebar
   */
  sidebarAnnouncement?: (number | null) | Announcement;
  /**
   * Type of content to display in sidebar cards
   */
  sidebarContentType?: ('none' | 'articles' | 'events' | 'podcasts') | null;
  /**
   * Advertisement to display in sidebar
   */
  sidebarAdvertisement?: (number | null) | Advertisement;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements".
 */
export interface Announcement {
  id: number;
  /**
   * Main headline for the announcement
   */
  headlineText: string;
  /**
   * Body content (supports rich text)
   */
  bodyText: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Display style of the announcement
   */
  variant: 'donation' | 'motivation';
  textureBackground:
    | 'cr-bg-natural-a500'
    | 'cr-bg-natural-s100'
    | 'cr-bg-natural-s900'
    | 'cr-bg-natural-d100'
    | 'cr-bg-natural-d900';
  showLink?: boolean | null;
  /**
   * Link text (e.g., "Donate Today!")
   */
  linkText?: string | null;
  /**
   * Link URL
   */
  linkUrl?: string | null;
  /**
   * Number of action buttons to display
   */
  buttonCount?: ('none' | 'one' | 'two') | null;
  /**
   * First button text
   */
  button1Text?: string | null;
  /**
   * First button icon
   */
  button1Icon?:
    | (
        | 'PiArrowRight'
        | 'PiArrowSquareUp'
        | 'PiCaretLeft'
        | 'PiCaretRight'
        | 'PiCaretUp'
        | 'PiCaretDown'
        | 'PiCaretUpDown'
        | 'PiX'
        | 'PiXBold'
        | 'PiMagnifyingGlass'
        | 'PiDotsThreeOutlineVerticalFill'
        | 'PiPlus'
        | 'PiMinus'
        | 'PiCalendarBlank'
        | 'PiCalendarDot'
        | 'PiCalendarDots'
        | 'PiCalendarPlus'
        | 'PiTicket'
        | 'PiVinylRecord'
        | 'PiMusicNote'
        | 'PiMusicNotes'
        | 'PiPlaylist'
        | 'PiPlayFill'
        | 'PiPauseFill'
        | 'PiHeadphones'
        | 'PiMicrophone'
        | 'PiHeart'
        | 'PiHeartFill'
        | 'PiHandHeart'
        | 'PiHandHeartLight'
        | 'PiUser'
        | 'PiUserCircle'
        | 'PiChatCircleText'
        | 'PiChatCircleTextLight'
        | 'PiSignIn'
        | 'PiReadCvLogo'
        | 'PiNotepad'
        | 'PiPaperclip'
        | 'PiNewspaper'
        | 'PiMapTrifold'
        | 'PiPaperPlaneRight'
        | 'PiPaperPlaneTilt'
        | 'PiGear'
        | 'PiFloppyDisk'
        | 'PiPencilSimple'
        | 'PiUploadSimple'
        | 'PiShoppingBag'
        | 'PiEye'
        | 'PiEyeSlash'
        | 'PiDownload'
        | 'PiDownloadSimple'
        | 'PiExport'
        | 'PiPlusCircle'
        | 'PiPlusSquare'
        | 'speaker'
        | 'mobile'
      )
    | null;
  /**
   * Second button text
   */
  button2Text?: string | null;
  /**
   * Second button icon
   */
  button2Icon?:
    | (
        | 'PiArrowRight'
        | 'PiArrowSquareUp'
        | 'PiCaretLeft'
        | 'PiCaretRight'
        | 'PiCaretUp'
        | 'PiCaretDown'
        | 'PiCaretUpDown'
        | 'PiX'
        | 'PiXBold'
        | 'PiMagnifyingGlass'
        | 'PiDotsThreeOutlineVerticalFill'
        | 'PiPlus'
        | 'PiMinus'
        | 'PiCalendarBlank'
        | 'PiCalendarDot'
        | 'PiCalendarDots'
        | 'PiCalendarPlus'
        | 'PiTicket'
        | 'PiVinylRecord'
        | 'PiMusicNote'
        | 'PiMusicNotes'
        | 'PiPlaylist'
        | 'PiPlayFill'
        | 'PiPauseFill'
        | 'PiHeadphones'
        | 'PiMicrophone'
        | 'PiHeart'
        | 'PiHeartFill'
        | 'PiHandHeart'
        | 'PiHandHeartLight'
        | 'PiUser'
        | 'PiUserCircle'
        | 'PiChatCircleText'
        | 'PiChatCircleTextLight'
        | 'PiSignIn'
        | 'PiReadCvLogo'
        | 'PiNotepad'
        | 'PiPaperclip'
        | 'PiNewspaper'
        | 'PiMapTrifold'
        | 'PiPaperPlaneRight'
        | 'PiPaperPlaneTilt'
        | 'PiGear'
        | 'PiFloppyDisk'
        | 'PiPencilSimple'
        | 'PiUploadSimple'
        | 'PiShoppingBag'
        | 'PiEye'
        | 'PiEyeSlash'
        | 'PiDownload'
        | 'PiDownloadSimple'
        | 'PiExport'
        | 'PiPlusCircle'
        | 'PiPlusSquare'
        | 'speaker'
        | 'mobile'
      )
    | null;
  /**
   * Current donation amount
   */
  currentAmount?: number | null;
  /**
   * Target donation goal
   */
  targetAmount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "advertisements".
 */
export interface Advertisement {
  id: number;
  /**
   * Internal name for this advertisement
   */
  name: string;
  /**
   * Whether this ad is currently active
   */
  isActive?: boolean | null;
  /**
   * Standard ad size or custom dimensions
   */
  size: 'large-rectangle' | 'leaderboard' | 'medium-rectangle' | 'mobile-banner' | 'wide-skyscraper' | 'custom';
  /**
   * Custom width in pixels (only used if size is "custom")
   */
  customWidth?: number | null;
  /**
   * Custom height in pixels (only used if size is "custom")
   */
  customHeight?: number | null;
  /**
   * Type of advertisement content
   */
  contentType: 'image' | 'video' | 'html' | 'embed';
  /**
   * Upload an image for the advertisement
   */
  image?: (number | null) | Media;
  /**
   * Or provide an external image URL
   */
  imageUrl?: string | null;
  /**
   * Alt text for the image/ad
   */
  alt?: string | null;
  /**
   * Upload a video file
   */
  video?: (number | null) | Media;
  /**
   * Or provide an external video URL
   */
  videoUrl?: string | null;
  /**
   * Raw HTML content for the advertisement
   */
  htmlContent?: string | null;
  /**
   * Third-party embed code (e.g., Google Ads, AdSense)
   */
  embedCode?: string | null;
  /**
   * URL to navigate to when ad is clicked
   */
  href?: string | null;
  /**
   * How to open the link
   */
  target?: ('_blank' | '_self') | null;
  /**
   * Show ad size label in placeholder
   */
  showLabel?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "podcasts".
 */
export interface Podcast {
  id: number;
  /**
   * Select a category for this podcast
   */
  category: number | Category;
  title: string;
  slug: string;
  /**
   * Brief summary (max 200 characters)
   */
  excerpt: string;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  host: string;
  coverArt?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  coverArtUrl?: string | null;
  /**
   * SoundCloud embed URL
   */
  soundCloudEmbedUrl?: string | null;
  pullQuote?: string | null;
  pullQuoteAttribution?: string | null;
  additionalInfo?: string | null;
  transcriptUrl?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopItems".
 */
export interface ShopItem {
  id: number;
  /**
   * Product name
   */
  name: string;
  /**
   * URL-friendly identifier (auto-generated from name)
   */
  slug: string;
  /**
   * Product description
   */
  description: string;
  /**
   * Display type (e.g., Apparel, Poster, Merchandise)
   */
  itemType?: string | null;
  /**
   * Product category
   */
  category: 'apparel' | 'accessories' | 'merchandise' | 'music' | 'other';
  /**
   * Price in USD
   */
  price: number;
  /**
   * Product images (first image is the main image)
   */
  images?:
    | {
        image: number | Media;
        /**
         * Alt text for accessibility
         */
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * External image URL (if not using uploaded image)
   */
  imageUrl?: string | null;
  /**
   * Additional product images (external URLs)
   */
  additionalImageUrls?:
    | {
        /**
         * Additional image URL
         */
        url: string;
        /**
         * Alt text for accessibility
         */
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Is this item currently in stock?
   */
  inStock?: boolean | null;
  /**
   * Available sizes (e.g., S, M, L, XL)
   */
  sizes?:
    | {
        size: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Product variants (colors, styles, etc.)
   */
  variants?:
    | {
        /**
         * Variant name (e.g., Color, Style)
         */
        name: string;
        options: {
          option: string;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  /**
   * External purchase URL (if sold on another platform)
   */
  externalUrl?: string | null;
  /**
   * Feature this item on the shop homepage
   */
  featured?: boolean | null;
  /**
   * Mark as sold out
   */
  soldOut?: boolean | null;
  /**
   * Mark as limited edition
   */
  limitedEdition?: boolean | null;
  /**
   * Display order (lower numbers appear first)
   */
  displayOrder?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "djs".
 */
export interface Dj {
  id: number;
  email: string;
  username: string;
  firstName: string;
  lastName: string;
  djName: string;
  showName?: string | null;
  /**
   * e.g., "Fri 11pm - 1am"
   */
  showTime?: string | null;
  role?:
    | (
        | 'Regular DJ'
        | 'Substitute DJ'
        | 'Board Member'
        | 'President'
        | 'Vice President'
        | 'Treasurer'
        | 'Content Publisher'
        | 'General'
      )
    | null;
  profileImage?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  profileImageUrl?: string | null;
  /**
   * Short bio for cards/lists
   */
  bio?: string | null;
  djExcerpt?: string | null;
  /**
   * Full DJ biography
   */
  djBio?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  primaryPhoneType?: ('mobile' | 'home' | 'work') | null;
  primaryPhone?: string | null;
  secondaryPhoneType?: ('mobile' | 'home' | 'work') | null;
  secondaryPhone?: string | null;
  address?: string | null;
  city?: string | null;
  state?: string | null;
  zipCode?: string | null;
  /**
   * Display location (e.g., "Chicago, IL")
   */
  location?: string | null;
  education?: string | null;
  employer?: string | null;
  memberSince?: string | null;
  hasRadioExperience?: ('yes' | 'no') | null;
  /**
   * Previous radio experience
   */
  radioStations?: string | null;
  specialSkills?:
    | {
        skill?:
          | (
              | 'DJ'
              | 'Audio production'
              | 'Community outreach'
              | 'Content writing'
              | 'Event planning'
              | 'Fundraising'
              | 'Journalism'
              | 'Marketing'
              | 'Music education'
              | 'Photography'
              | 'Sales'
              | 'Other'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  interests?:
    | {
        interest?:
          | (
              | 'DJ'
              | 'Community radio'
              | 'Content writing'
              | 'Event planning'
              | 'Event working'
              | 'Fundraising'
              | 'Interviews'
              | 'Marketing'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  volunteerOrgs?:
    | {
        org?: string | null;
        id?: string | null;
      }[]
    | null;
  wantsToDJ?: ('yes' | 'no') | null;
  djAvailability?:
    | {
        time?:
          | (
              | 'Weekday mornings'
              | 'Weekday day'
              | 'Weekday evening'
              | 'Weekday night'
              | 'Weekend mornings'
              | 'Weekend day'
              | 'Weekend evening'
              | 'Weekend night'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  donorLevel?: ('Listener' | 'Supporter' | 'Vinyl Circle') | null;
  age?: ('18-24' | '25-34' | '35-44' | '45-54' | '55-64' | '65plus') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage page-specific content for mobile app screens
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mobilePageContent".
 */
export interface MobilePageContent {
  id: number;
  /**
   * Which mobile screen this content is for (one entry per page)
   */
  pageIdentifier:
    | 'make-request'
    | 'now-playing'
    | 'recently-played'
    | 'my-collection'
    | 'account-settings'
    | 'android-auto';
  /**
   * Page heading (e.g., "Make a Song Request")
   */
  pageTitle?: string | null;
  /**
   * Text shown above the form (e.g., "Request a song for the DJ to play during their show")
   */
  pageSubtitle?: string | null;
  /**
   * Content shown at the top of the page (before main content)
   */
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Hint text for forms (e.g., "Keep it friendly and respectful")
   */
  formHintText?: string | null;
  /**
   * Override the global not-logged-in message for this specific page (optional)
   */
  customNotLoggedInMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Does this page require the user to be logged in? (Not currently used - login requirements are defined by the app code)
   */
  isLoginRequired?: boolean | null;
  /**
   * Uncheck to temporarily hide this page without deleting it. The page will not be shown in the app when inactive.
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'ageGate';
        value: number | AgeGate;
      } | null)
    | ({
        relationTo: 'listeners';
        value: number | Listener;
      } | null)
    | ({
        relationTo: 'venues';
        value: number | Venue;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'articles';
        value: number | Article;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'volunteerCalendar';
        value: number | VolunteerCalendar;
      } | null)
    | ({
        relationTo: 'weeklyCharts';
        value: number | WeeklyChart;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'podcasts';
        value: number | Podcast;
      } | null)
    | ({
        relationTo: 'announcements';
        value: number | Announcement;
      } | null)
    | ({
        relationTo: 'advertisements';
        value: number | Advertisement;
      } | null)
    | ({
        relationTo: 'shopItems';
        value: number | ShopItem;
      } | null)
    | ({
        relationTo: 'djs';
        value: number | Dj;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'mobilePageContent';
        value: number | MobilePageContent;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ageGate_select".
 */
export interface AgeGateSelect<T extends boolean = true> {
  age?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listeners_select".
 */
export interface ListenersSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues_select".
 */
export interface VenuesSelect<T extends boolean = true> {
  name?: T;
  address?: T;
  city?: T;
  state?: T;
  zip?: T;
  phone?: T;
  website?: T;
  mapUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  author?: T;
  featuredImage?: T;
  featuredImageUrl?: T;
  excerpt?: T;
  content?: T;
  videoTitle?: T;
  youtubeVideoId?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  publishedDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  excerpt?: T;
  content?: T;
  featuredImage?: T;
  featuredImageUrl?: T;
  showPhotoCredit?: T;
  photographerName?: T;
  venue?: T;
  date?: T;
  endDate?: T;
  featured?: T;
  ageRestriction?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volunteerCalendar_select".
 */
export interface VolunteerCalendarSelect<T extends boolean = true> {
  name?: T;
  startDate?: T;
  endDate?: T;
  dateTime?: T;
  description?: T;
  location?: T;
  eventDetails?:
    | T
    | {
        detail?: T;
        id?: T;
      };
  moreInfoUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "weeklyCharts_select".
 */
export interface WeeklyChartsSelect<T extends boolean = true> {
  preheader?: T;
  title?: T;
  slug?: T;
  listType?: T;
  csvFile?: T;
  csvImport?: T;
  tracks?:
    | T
    | {
        songName?: T;
        artistName?: T;
        recordCompany?: T;
        id?: T;
      };
  isCurrentWeek?: T;
  notes?: T;
  featuredTrack?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  layout?:
    | T
    | {
        contentCard?:
          | T
          | {
              preheader?: T;
              title?: T;
              titleTag?: T;
              content?: T;
              imagePosition?: T;
              backgroundImage?: T;
              backgroundImageUrl?: T;
              id?: T;
              blockName?: T;
            };
        imageRow?:
          | T
          | {
              images?:
                | T
                | {
                    image?: T;
                    imageUrl?: T;
                    alt?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  sidebarAnnouncement?: T;
  sidebarContentType?: T;
  sidebarAdvertisement?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "podcasts_select".
 */
export interface PodcastsSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  excerpt?: T;
  content?: T;
  host?: T;
  coverArt?: T;
  coverArtUrl?: T;
  soundCloudEmbedUrl?: T;
  pullQuote?: T;
  pullQuoteAttribution?: T;
  additionalInfo?: T;
  transcriptUrl?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements_select".
 */
export interface AnnouncementsSelect<T extends boolean = true> {
  headlineText?: T;
  bodyText?: T;
  variant?: T;
  textureBackground?: T;
  showLink?: T;
  linkText?: T;
  linkUrl?: T;
  buttonCount?: T;
  button1Text?: T;
  button1Icon?: T;
  button2Text?: T;
  button2Icon?: T;
  currentAmount?: T;
  targetAmount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "advertisements_select".
 */
export interface AdvertisementsSelect<T extends boolean = true> {
  name?: T;
  isActive?: T;
  size?: T;
  customWidth?: T;
  customHeight?: T;
  contentType?: T;
  image?: T;
  imageUrl?: T;
  alt?: T;
  video?: T;
  videoUrl?: T;
  htmlContent?: T;
  embedCode?: T;
  href?: T;
  target?: T;
  showLabel?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopItems_select".
 */
export interface ShopItemsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  itemType?: T;
  category?: T;
  price?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  imageUrl?: T;
  additionalImageUrls?:
    | T
    | {
        url?: T;
        alt?: T;
        id?: T;
      };
  inStock?: T;
  sizes?:
    | T
    | {
        size?: T;
        id?: T;
      };
  variants?:
    | T
    | {
        name?: T;
        options?:
          | T
          | {
              option?: T;
              id?: T;
            };
        id?: T;
      };
  externalUrl?: T;
  featured?: T;
  soldOut?: T;
  limitedEdition?: T;
  displayOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "djs_select".
 */
export interface DjsSelect<T extends boolean = true> {
  email?: T;
  username?: T;
  firstName?: T;
  lastName?: T;
  djName?: T;
  showName?: T;
  showTime?: T;
  role?: T;
  profileImage?: T;
  profileImageUrl?: T;
  bio?: T;
  djExcerpt?: T;
  djBio?: T;
  primaryPhoneType?: T;
  primaryPhone?: T;
  secondaryPhoneType?: T;
  secondaryPhone?: T;
  address?: T;
  city?: T;
  state?: T;
  zipCode?: T;
  location?: T;
  education?: T;
  employer?: T;
  memberSince?: T;
  hasRadioExperience?: T;
  radioStations?: T;
  specialSkills?:
    | T
    | {
        skill?: T;
        id?: T;
      };
  interests?:
    | T
    | {
        interest?: T;
        id?: T;
      };
  volunteerOrgs?:
    | T
    | {
        org?: T;
        id?: T;
      };
  wantsToDJ?: T;
  djAvailability?:
    | T
    | {
        time?: T;
        id?: T;
      };
  donorLevel?: T;
  age?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mobilePageContent_select".
 */
export interface MobilePageContentSelect<T extends boolean = true> {
  pageIdentifier?: T;
  pageTitle?: T;
  pageSubtitle?: T;
  introContent?: T;
  formHintText?: T;
  customNotLoggedInMessage?: T;
  isLoginRequired?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings".
 */
export interface SiteSetting {
  id: number;
  /**
   * Show announcement banner at top of landing page
   */
  showTopAnnouncement?: boolean | null;
  /**
   * Select which announcement to display at top of landing page
   */
  topAnnouncement?: (number | null) | Announcement;
  /**
   * Select which announcement to display in sidebar
   */
  sidebarAnnouncement?: (number | null) | Announcement;
  /**
   * Select which advertisement to display in sidebar
   */
  sidebarAdvertisement?: (number | null) | Advertisement;
  /**
   * Show 3 random songs from logged-in user's saved collection (if they have any)
   */
  showUserCollection?: boolean | null;
  /**
   * Select which Weekly Chart list to display in sidebar
   */
  listenSidebarWeeklyChart?: (number | null) | WeeklyChart;
  /**
   * Select which advertisement to display in sidebar
   */
  listenSidebarAdvertisement?: (number | null) | Advertisement;
  /**
   * Select announcement for full-width section (e.g., "DJ Applications Now Open")
   */
  fullWidthAnnouncement?: (number | null) | Announcement;
  /**
   * Select which Weekly Chart list to display on the left
   */
  leftWeeklyChart?: (number | null) | WeeklyChart;
  /**
   * Select which Weekly Chart list to display on the right
   */
  rightWeeklyChart?: (number | null) | WeeklyChart;
  /**
   * Select which announcement to display in sidebar
   */
  eventsSidebarAnnouncement?: (number | null) | Announcement;
  /**
   * Select which content type to display in sidebar
   */
  eventsSidebarContentType?: ('articles' | 'podcasts' | 'events' | 'none') | null;
  /**
   * Select which advertisement to display in sidebar
   */
  eventsSidebarAdvertisement?: (number | null) | Advertisement;
  /**
   * Select announcement for full-width section (e.g., "Stream Quality Upgrade")
   */
  eventsFullWidthAnnouncement?: (number | null) | Announcement;
  /**
   * Select which announcement to display in sidebar
   */
  articlesSidebarAnnouncement?: (number | null) | Announcement;
  /**
   * Select which content type to display in sidebar
   */
  articlesSidebarContentType?: ('articles' | 'podcasts' | 'events' | 'none') | null;
  /**
   * Select which advertisement to display in sidebar
   */
  articlesSidebarAdvertisement?: (number | null) | Advertisement;
  /**
   * Select announcement for full-width section
   */
  articlesFullWidthAnnouncement?: (number | null) | Announcement;
  /**
   * Content for the support section above the footer
   */
  supportContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Show DCase logo in support section
   */
  showDCaseLogo?: boolean | null;
  /**
   * DCase logo image
   */
  dCaseLogo?: (number | null) | Media;
  /**
   * URL when DCase logo is clicked
   */
  dCaseLogoUrl?: string | null;
  /**
   * Show Illinois Arts Council logo in support section
   */
  showIlArtsCouncilLogo?: boolean | null;
  /**
   * Illinois Arts Council logo image
   */
  ilArtsCouncilLogo?: (number | null) | Media;
  /**
   * URL when Illinois Arts Council logo is clicked
   */
  ilArtsCouncilLogoUrl?: string | null;
  /**
   * Additional support logos (up to 3)
   */
  additionalLogos?:
    | {
        /**
         * Logo image
         */
        logo?: (number | null) | Media;
        /**
         * URL when logo is clicked (optional)
         */
        logoUrl?: string | null;
        /**
         * Alt text for logo
         */
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Advertisement to show in support section
   */
  supportAdvertisement?: (number | null) | Advertisement;
  /**
   * Copyright text. Use {year} as placeholder for current year.
   */
  copyrightText?: string | null;
  /**
   * Social media links for footer
   */
  socialLinks?:
    | {
        platform:
          | 'facebook'
          | 'twitter'
          | 'instagram'
          | 'bluesky'
          | 'youtube'
          | 'tiktok'
          | 'linkedin'
          | 'spotify'
          | 'apple-music'
          | 'other';
        url: string;
        /**
         * Optional custom label (defaults to platform name)
         */
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Show CHIRP Radio Film Fest logo in footer
   */
  showChirpFilmFestLogo?: boolean | null;
  /**
   * CHIRP Radio Film Fest logo image
   */
  chirpFilmFestLogo?: (number | null) | Media;
  /**
   * URL when Film Fest logo is clicked
   */
  chirpFilmFestLogoUrl?: string | null;
  /**
   * Show First Time logo in footer
   */
  showFirstTimeLogo?: boolean | null;
  /**
   * First Time logo image
   */
  firstTimeLogo?: (number | null) | Media;
  /**
   * URL when First Time logo is clicked
   */
  firstTimeLogoUrl?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global settings and shared content for the mobile app
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mobileAppSettings".
 */
export interface MobileAppSetting {
  id: number;
  /**
   * Default message shown on pages that require login (used across all pages unless overridden)
   */
  notLoggedInMessage?: {
    /**
     * Heading for not-logged-in state
     */
    title?: string | null;
    /**
     * Explanation of why login is required
     */
    message?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    /**
     * Text for login button
     */
    loginButtonText?: string | null;
    /**
     * Text for signup button
     */
    signupButtonText?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  showTopAnnouncement?: T;
  topAnnouncement?: T;
  sidebarAnnouncement?: T;
  sidebarAdvertisement?: T;
  showUserCollection?: T;
  listenSidebarWeeklyChart?: T;
  listenSidebarAdvertisement?: T;
  fullWidthAnnouncement?: T;
  leftWeeklyChart?: T;
  rightWeeklyChart?: T;
  eventsSidebarAnnouncement?: T;
  eventsSidebarContentType?: T;
  eventsSidebarAdvertisement?: T;
  eventsFullWidthAnnouncement?: T;
  articlesSidebarAnnouncement?: T;
  articlesSidebarContentType?: T;
  articlesSidebarAdvertisement?: T;
  articlesFullWidthAnnouncement?: T;
  supportContent?: T;
  showDCaseLogo?: T;
  dCaseLogo?: T;
  dCaseLogoUrl?: T;
  showIlArtsCouncilLogo?: T;
  ilArtsCouncilLogo?: T;
  ilArtsCouncilLogoUrl?: T;
  additionalLogos?:
    | T
    | {
        logo?: T;
        logoUrl?: T;
        alt?: T;
        id?: T;
      };
  supportAdvertisement?: T;
  copyrightText?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  showChirpFilmFestLogo?: T;
  chirpFilmFestLogo?: T;
  chirpFilmFestLogoUrl?: T;
  showFirstTimeLogo?: T;
  firstTimeLogo?: T;
  firstTimeLogoUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mobileAppSettings_select".
 */
export interface MobileAppSettingsSelect<T extends boolean = true> {
  notLoggedInMessage?:
    | T
    | {
        title?: T;
        message?: T;
        loginButtonText?: T;
        signupButtonText?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    ageGate: AgeGate;
    listeners: Listener;
    venues: Venue;
    categories: Category;
    articles: Article;
    events: Event;
    pages: Page;
    podcasts: Podcast;
    announcements: Announcement;
    advertisements: Advertisement;
    djs: Dj;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    ageGate: AgeGateSelect<false> | AgeGateSelect<true>;
    listeners: ListenersSelect<false> | ListenersSelect<true>;
    venues: VenuesSelect<false> | VenuesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    podcasts: PodcastsSelect<false> | PodcastsSelect<true>;
    announcements: AnnouncementsSelect<false> | AnnouncementsSelect<true>;
    advertisements: AdvertisementsSelect<false> | AdvertisementsSelect<true>;
    djs: DjsSelect<false> | DjsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ageGate".
 */
export interface AgeGate {
  id: number;
  age: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listeners".
 */
export interface Listener {
  id: number;
  name: string;
  email?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues".
 */
export interface Venue {
  id: number;
  name: string;
  address?: string | null;
  city?: string | null;
  state?: string | null;
  zip?: string | null;
  phone?: string | null;
  website?: string | null;
  mapUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number;
  category: number | Category;
  title: string;
  slug: string;
  author: string;
  featuredImage?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  featuredImageUrl?: string | null;
  /**
   * Brief summary (max 200 characters)
   */
  excerpt: string;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  videoTitle?: string | null;
  /**
   * YouTube video ID or full URL (e.g., rXeaPSu1JFY or https://www.youtube.com/watch?v=rXeaPSu1JFY)
   */
  youtubeVideoId?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  publishedDate: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  /**
   * Select a category for this event
   */
  category: number | Category;
  title: string;
  slug: string;
  /**
   * Brief summary (max 200 characters)
   */
  excerpt: string;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  featuredImage?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  featuredImageUrl?: string | null;
  /**
   * Display photo credit on the event page
   */
  showPhotoCredit?: boolean | null;
  /**
   * Name of the photographer
   */
  photographerName?: string | null;
  /**
   * Select a venue from the list
   */
  venue: number | Venue;
  date: string;
  endDate?: string | null;
  featured?: boolean | null;
  /**
   * Select age restriction if applicable
   */
  ageRestriction?: (number | null) | AgeGate;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * The title displayed in browser tabs and search results (SEO)
   */
  title: string;
  slug: string;
  /**
   * Brief page summary used for SEO meta description and social media previews (recommended 150-160 characters)
   */
  excerpt?: string | null;
  layout?:
    | (
        | {
            /**
             * Small text above the title
             */
            preheader?: string | null;
            title: string;
            titleTag?: ('h1' | 'h2' | 'h3' | 'h4') | null;
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            imagePosition?: ('none' | 'left' | 'right') | null;
            backgroundImage?: (number | null) | Media;
            /**
             * Or provide external URL
             */
            backgroundImageUrl?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contentCard';
          }
        | {
            images?:
              | {
                  image?: (number | null) | Media;
                  imageUrl?: string | null;
                  alt?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageRow';
          }
      )[]
    | null;
  /**
   * Optional announcement to display in sidebar
   */
  sidebarAnnouncement?: (number | null) | Announcement;
  /**
   * Type of content to display in sidebar cards
   */
  sidebarContentType?: ('none' | 'articles' | 'events' | 'podcasts') | null;
  /**
   * Advertisement to display in sidebar
   */
  sidebarAdvertisement?: (number | null) | Advertisement;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements".
 */
export interface Announcement {
  id: number;
  title: string;
  message: string;
  type: 'fundraiser' | 'event' | 'content' | 'technical' | 'alert' | 'volunteer' | 'schedule';
  priority: 'high' | 'medium' | 'low';
  /**
   * Select which pages this announcement should appear on
   */
  displayOn?:
    | (
        | 'landing'
        | 'articles'
        | 'events'
        | 'podcasts'
        | 'djs'
        | 'about'
        | 'volunteer'
        | 'contact'
        | 'ways-to-give'
        | 'ways-to-listen'
      )[]
    | null;
  startDate: string;
  endDate: string;
  isActive?: boolean | null;
  /**
   * Call-to-action button text (optional)
   */
  ctaText?: string | null;
  /**
   * Call-to-action button URL (optional)
   */
  ctaUrl?: string | null;
  /**
   * Can users dismiss this announcement?
   */
  dismissible?: boolean | null;
  /**
   * Show prominently on landing page
   */
  featuredOnLanding?: boolean | null;
  /**
   * Show donation progress bar
   */
  showDonationBar?: boolean | null;
  /**
   * CSS class for background color (e.g., cr-bg-natural-a500)
   */
  backgroundColor?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "advertisements".
 */
export interface Advertisement {
  id: number;
  /**
   * Internal name for this advertisement
   */
  name: string;
  /**
   * Whether this ad is currently active
   */
  isActive?: boolean | null;
  /**
   * Standard ad size or custom dimensions
   */
  size: 'large-rectangle' | 'leaderboard' | 'medium-rectangle' | 'mobile-banner' | 'wide-skyscraper' | 'custom';
  /**
   * Custom width in pixels (only used if size is "custom")
   */
  customWidth?: number | null;
  /**
   * Custom height in pixels (only used if size is "custom")
   */
  customHeight?: number | null;
  /**
   * Type of advertisement content
   */
  contentType: 'image' | 'video' | 'html' | 'embed';
  /**
   * Upload an image for the advertisement
   */
  image?: (number | null) | Media;
  /**
   * Or provide an external image URL
   */
  imageUrl?: string | null;
  /**
   * Alt text for the image/ad
   */
  alt?: string | null;
  /**
   * Upload a video file
   */
  video?: (number | null) | Media;
  /**
   * Or provide an external video URL
   */
  videoUrl?: string | null;
  /**
   * Raw HTML content for the advertisement
   */
  htmlContent?: string | null;
  /**
   * Third-party embed code (e.g., Google Ads, AdSense)
   */
  embedCode?: string | null;
  /**
   * URL to navigate to when ad is clicked
   */
  href?: string | null;
  /**
   * How to open the link
   */
  target?: ('_blank' | '_self') | null;
  /**
   * Show ad size label in placeholder
   */
  showLabel?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "podcasts".
 */
export interface Podcast {
  id: number;
  /**
   * Select a category for this podcast
   */
  category: number | Category;
  title: string;
  slug: string;
  /**
   * Brief summary (max 200 characters)
   */
  excerpt: string;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  host: string;
  coverArt?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  coverArtUrl?: string | null;
  /**
   * SoundCloud embed URL
   */
  soundCloudEmbedUrl?: string | null;
  pullQuote?: string | null;
  pullQuoteAttribution?: string | null;
  additionalInfo?: string | null;
  transcriptUrl?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "djs".
 */
export interface Dj {
  id: number;
  email: string;
  username: string;
  firstName: string;
  lastName: string;
  djName: string;
  showName?: string | null;
  /**
   * e.g., "Fri 11pm - 1am"
   */
  showTime?: string | null;
  role?:
    | (
        | 'Regular DJ'
        | 'Substitute DJ'
        | 'Board Member'
        | 'President'
        | 'Vice President'
        | 'Treasurer'
        | 'Content Publisher'
        | 'General'
      )
    | null;
  profileImage?: (number | null) | Media;
  /**
   * Or provide external URL
   */
  profileImageUrl?: string | null;
  /**
   * Short bio for cards/lists
   */
  bio?: string | null;
  djExcerpt?: string | null;
  /**
   * Full DJ biography
   */
  djBio?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  primaryPhoneType?: ('mobile' | 'home' | 'work') | null;
  primaryPhone?: string | null;
  secondaryPhoneType?: ('mobile' | 'home' | 'work') | null;
  secondaryPhone?: string | null;
  address?: string | null;
  city?: string | null;
  state?: string | null;
  zipCode?: string | null;
  /**
   * Display location (e.g., "Chicago, IL")
   */
  location?: string | null;
  education?: string | null;
  employer?: string | null;
  memberSince?: string | null;
  hasRadioExperience?: ('yes' | 'no') | null;
  /**
   * Previous radio experience
   */
  radioStations?: string | null;
  specialSkills?:
    | {
        skill?:
          | (
              | 'DJ'
              | 'Audio production'
              | 'Community outreach'
              | 'Content writing'
              | 'Event planning'
              | 'Fundraising'
              | 'Journalism'
              | 'Marketing'
              | 'Music education'
              | 'Photography'
              | 'Sales'
              | 'Other'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  interests?:
    | {
        interest?:
          | (
              | 'DJ'
              | 'Community radio'
              | 'Content writing'
              | 'Event planning'
              | 'Event working'
              | 'Fundraising'
              | 'Interviews'
              | 'Marketing'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  volunteerOrgs?:
    | {
        org?: string | null;
        id?: string | null;
      }[]
    | null;
  wantsToDJ?: ('yes' | 'no') | null;
  djAvailability?:
    | {
        time?:
          | (
              | 'Weekday mornings'
              | 'Weekday day'
              | 'Weekday evening'
              | 'Weekday night'
              | 'Weekend mornings'
              | 'Weekend day'
              | 'Weekend evening'
              | 'Weekend night'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  donorLevel?: ('Listener' | 'Supporter' | 'Vinyl Circle') | null;
  age?: ('18-24' | '25-34' | '35-44' | '45-54' | '55-64' | '65plus') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'ageGate';
        value: number | AgeGate;
      } | null)
    | ({
        relationTo: 'listeners';
        value: number | Listener;
      } | null)
    | ({
        relationTo: 'venues';
        value: number | Venue;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'articles';
        value: number | Article;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'podcasts';
        value: number | Podcast;
      } | null)
    | ({
        relationTo: 'announcements';
        value: number | Announcement;
      } | null)
    | ({
        relationTo: 'advertisements';
        value: number | Advertisement;
      } | null)
    | ({
        relationTo: 'djs';
        value: number | Dj;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ageGate_select".
 */
export interface AgeGateSelect<T extends boolean = true> {
  age?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listeners_select".
 */
export interface ListenersSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues_select".
 */
export interface VenuesSelect<T extends boolean = true> {
  name?: T;
  address?: T;
  city?: T;
  state?: T;
  zip?: T;
  phone?: T;
  website?: T;
  mapUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  author?: T;
  featuredImage?: T;
  featuredImageUrl?: T;
  excerpt?: T;
  content?: T;
  videoTitle?: T;
  youtubeVideoId?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  publishedDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  excerpt?: T;
  content?: T;
  featuredImage?: T;
  featuredImageUrl?: T;
  showPhotoCredit?: T;
  photographerName?: T;
  venue?: T;
  date?: T;
  endDate?: T;
  featured?: T;
  ageRestriction?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  layout?:
    | T
    | {
        contentCard?:
          | T
          | {
              preheader?: T;
              title?: T;
              titleTag?: T;
              content?: T;
              imagePosition?: T;
              backgroundImage?: T;
              backgroundImageUrl?: T;
              id?: T;
              blockName?: T;
            };
        imageRow?:
          | T
          | {
              images?:
                | T
                | {
                    image?: T;
                    imageUrl?: T;
                    alt?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  sidebarAnnouncement?: T;
  sidebarContentType?: T;
  sidebarAdvertisement?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "podcasts_select".
 */
export interface PodcastsSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  excerpt?: T;
  content?: T;
  host?: T;
  coverArt?: T;
  coverArtUrl?: T;
  soundCloudEmbedUrl?: T;
  pullQuote?: T;
  pullQuoteAttribution?: T;
  additionalInfo?: T;
  transcriptUrl?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements_select".
 */
export interface AnnouncementsSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  type?: T;
  priority?: T;
  displayOn?: T;
  startDate?: T;
  endDate?: T;
  isActive?: T;
  ctaText?: T;
  ctaUrl?: T;
  dismissible?: T;
  featuredOnLanding?: T;
  showDonationBar?: T;
  backgroundColor?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "advertisements_select".
 */
export interface AdvertisementsSelect<T extends boolean = true> {
  name?: T;
  isActive?: T;
  size?: T;
  customWidth?: T;
  customHeight?: T;
  contentType?: T;
  image?: T;
  imageUrl?: T;
  alt?: T;
  video?: T;
  videoUrl?: T;
  htmlContent?: T;
  embedCode?: T;
  href?: T;
  target?: T;
  showLabel?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "djs_select".
 */
export interface DjsSelect<T extends boolean = true> {
  email?: T;
  username?: T;
  firstName?: T;
  lastName?: T;
  djName?: T;
  showName?: T;
  showTime?: T;
  role?: T;
  profileImage?: T;
  profileImageUrl?: T;
  bio?: T;
  djExcerpt?: T;
  djBio?: T;
  primaryPhoneType?: T;
  primaryPhone?: T;
  secondaryPhoneType?: T;
  secondaryPhone?: T;
  address?: T;
  city?: T;
  state?: T;
  zipCode?: T;
  location?: T;
  education?: T;
  employer?: T;
  memberSince?: T;
  hasRadioExperience?: T;
  radioStations?: T;
  specialSkills?:
    | T
    | {
        skill?: T;
        id?: T;
      };
  interests?:
    | T
    | {
        interest?: T;
        id?: T;
      };
  volunteerOrgs?:
    | T
    | {
        org?: T;
        id?: T;
      };
  wantsToDJ?: T;
  djAvailability?:
    | T
    | {
        time?: T;
        id?: T;
      };
  donorLevel?: T;
  age?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}